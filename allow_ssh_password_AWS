#!/bin/bash

# Detect the operating system
OS=$(awk -F= '/^NAME/{print $2}' /etc/os-release)

# Function to configure SSHD
configure_sshd() {
    echo "Configuring SSHD for password authentication..."
    sudo sed -i 's/^#\?\(PasswordAuthentication\s*\).*$/\1 yes/' /etc/ssh/sshd_config
    sudo sed -i 's/^#\?\(ChallengeResponseAuthentication\s*\).*$/\1 no/' /etc/ssh/sshd_config
    sudo sed -i 's/^#\?\(PermitEmptyPasswords\s*\).*$/\1 no/' /etc/ssh/sshd_config
    sudo sed -i 's/^#\?\(UsePAM\s*\).*$/\1 yes/' /etc/ssh/sshd_config

    # Add EC2 Instance Connect configuration if not already present
    if ! grep -q "AuthorizedKeysCommand /opt/aws/bin/eic_run_authorized_keys %u %f" /etc/ssh/sshd_config; then
        echo "Adding EC2 Instance Connect configuration..."
        echo "AuthorizedKeysCommand /opt/aws/bin/eic_run_authorized_keys %u %f" | sudo tee -a /etc/ssh/sshd_config
        echo "AuthorizedKeysCommandUser ec2-instance-connect" | sudo tee -a /etc/ssh/sshd_config
    fi

    echo "Restarting SSHD service..."
    if [[ $OS == *"Ubuntu"* ]]; then
        sudo systemctl restart ssh
    else
        sudo systemctl restart sshd
    fi

    echo "SSHD configuration updated."
}

# Function to create a new user and set their password
create_user() {
    local username=$1
    local password=$2

    echo "Creating user $username..."
    sudo useradd -m -s /bin/bash $username
    echo "$username:$password" | sudo chpasswd

    # Grant the user sudo privileges
    sudo usermod -aG sudo $username
    echo "$username ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$username

    echo "User $username created and configured."
}

# Function to check SSH service status
check_ssh_status() {
    echo "Checking SSH service status..."
    if [[ $OS == *"Ubuntu"* ]]; then
        sudo systemctl status ssh
    else
        sudo systemctl status sshd
    fi
}

# Main script logic
echo "Detected OS: $OS"

# Configure SSHD and create user based on OS type
if [[ $OS == *"Ubuntu"* || $OS == *"Debian"* ]]; then
    configure_sshd
    create_user "ansible" "ansible"
elif [[ $OS == *"CentOS"* || $OS == *"Red Hat"* || $OS == *"Amazon"* ]]; then
    configure_sshd
    create_user "ansible" "ansible"
else
    echo "Unsupported operating system."
    exit 1
fi

#check_ssh_status

#echo "Configuration complete. Please ensure your security groups allow SSH access on port 22."
